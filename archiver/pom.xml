<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>haiku</artifactId>
    <groupId>org.gps.haiku</groupId>
    <version>1.0.0</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>archiver</artifactId>
  <description>Archives the project as native apps/installers.</description>

  <properties>
    <jpackage.windows.path>${java.home}/bin/jpackage.exe</jpackage.windows.path>
    <jpackage.macos.path>${java.home}/bin/jpackage</jpackage.macos.path>
  </properties>

  <profiles>
    <!-- Windows Profile -->
    <profile>
      <id>build-installer-on-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
        <property>
          <name>buildInstaller</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- Building WinOs native app using jpackage/wix. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <!-- windows-amd64-component-gather -->
              <execution>
                <id>windows-amd64-component-gather</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <mkdir dir="${project.build.directory}/jpackage-amd64"/>
                    <copy file="${project.basedir}/../player-ui/target/haiku-jar-with-dependencies.jar"
                          tofile="${project.build.directory}/jpackage-amd64/haiku.jar"
                          overwrite="true"/>
                    <copy file="${project.basedir}/../youtube-dl-exec/youtube-dl.exe"
                          tofile="${project.build.directory}/jpackage-amd64/youtube-dl.exe"
                          overwrite="true"/>
                    <mkdir dir="${project.build.directory}/jpackage-amd64/config"/>
                    <copy file="${project.basedir}/config/win-app.properties"
                          tofile="${project.build.directory}/jpackage-amd64/config/win-app.properties"
                          overwrite="true"/>
                    <copy file="${project.basedir}/src/main/resources/log4j2.xml"
                          tofile="${project.build.directory}/jpackage-amd64/log4j2.xml"
                          overwrite="true"/>
                    <mkdir dir="${project.build.directory}/jpackage-amd64/winOs/amd64"/>
                    <copy todir="${project.build.directory}/jpackage-amd64/winOs/amd64"
                          overwrite="true">
                      <fileset dir="${project.basedir}/../LibVLC/winOs/amd64"/>
                    </copy>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>windows-amd64-installer</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${jpackage.windows.path}</executable>
                  <workingDirectory>${project.build.directory}/jpackage-amd64</workingDirectory>
                  <arguments>
                    <!-- type -->
                    <argument>--type</argument>
                    <argument>exe</argument>
                    <!-- app version -->
                    <argument>--app-version</argument>
                    <argument>${project.version}</argument>
                    <!-- name -->
                    <argument>--name</argument>
                    <argument>haiku</argument>
                    <!-- destination -->
                    <argument>--dest</argument>
                    <argument>${project.build.directory}/haiku-amd64-installer</argument>
                    <!-- temp folder -->
                    <argument>--temp</argument>
                    <argument>${project.build.directory}/jpackage-amd64-temp</argument>
                    <!-- verbose -->
                    <argument>--verbose</argument>
                    <!-- input -->
                    <argument>--input</argument>
                    <argument>${project.build.directory}/jpackage-amd64</argument>
                    <!-- icon -->
                    <argument>--icon</argument>
                    <argument>${project.basedir}/src/main/resources/haiku.ico</argument>
                    <!-- main-jar (relative-path) -->
                    <argument>--main-jar</argument>
                    <argument>haiku.jar</argument>
                    <!-- about-url -->
                    <argument>--about-url</argument>
                    <argument>https://github.com/leogps/haiku</argument>
                    <!-- license-file -->
                    <argument>--license-file</argument>
                    <argument>${project.basedir}/../LICENSE</argument>
                    <!-- win-menu -->
                    <argument>--win-menu</argument>
                    <!-- win-help-url -->
                    <argument>--win-help-url</argument>
                    <argument>https://github.com/leogps/haiku</argument>
                    <!-- win-shortcut -->
                    <argument>--win-shortcut</argument>
                    <!-- win-shortcut-prompt -->
                    <argument>--win-shortcut-prompt</argument>
                    <!-- win-update-url -->
                    <argument>--win-update-url</argument>
                    <argument>https://github.com/leogps/haiku/releases</argument>
                    <!-- win-upgrade-uuid -->
                    <argument>--win-upgrade-uuid</argument>
                    <argument>9d537a3b-5bef-4145-8949-e7c921421a91</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- MacOS Profile -->
    <profile>
      <id>build-macos-app-on-macos</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
        <property>
          <name>buildInstaller</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- Building macOS native app using jpackage. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <!-- macos-amd64-component-gather -->
              <execution>
                <id>macos-${os.arch}-component-gather</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <mkdir dir="${project.build.directory}/jpackage-${os.arch}"/>
                    <copy file="${project.basedir}/../player-ui/target/haiku-jar-with-dependencies.jar"
                          tofile="${project.build.directory}/jpackage-${os.arch}/haiku.jar"
                          overwrite="true"/>
                    <mkdir dir="${project.build.directory}/jpackage-${os.arch}/youtube-dl-exec"/>
                    <copy file="${project.basedir}/../youtube-dl-exec/youtube-dl"
                          tofile="${project.build.directory}/jpackage-${os.arch}/youtube-dl-exec/youtube-dl"
                          overwrite="true"/>
                    <chmod file="${project.build.directory}/jpackage-${os.arch}/youtube-dl-exec/youtube-dl"
                           perm="ugo+rx"/>
                    <mkdir dir="${project.build.directory}/jpackage-${os.arch}/config"/>
                    <copy file="${project.basedir}/config/mac-app.properties"
                          tofile="${project.build.directory}/jpackage-${os.arch}/config/mac-app.properties"
                          overwrite="true"/>
                    <copy file="${project.basedir}/src/main/resources/log4j2.xml"
                          tofile="${project.build.directory}/jpackage-${os.arch}/log4j2.xml"
                          overwrite="true"/>
                    <mkdir dir="${project.build.directory}/jpackage-${os.arch}/LibVLC/macOs/${os.arch}"/>
                    <copy todir="${project.build.directory}/jpackage-${os.arch}/LibVLC/macOs/${os.arch}"
                          overwrite="true">
                      <fileset dir="${project.basedir}/../LibVLC/macOs/${os.arch}"/>
                    </copy>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>macos-${os.arch}-installer</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${jpackage.macos.path}</executable>
                  <workingDirectory>${project.build.directory}/jpackage-${os.arch}</workingDirectory>
                  <arguments>
                    <!-- type -->
                    <argument>--type</argument>
                    <argument>dmg</argument>
                    <!-- app version -->
                    <argument>--app-version</argument>
                    <argument>${project.version}</argument>
                    <!-- name -->
                    <argument>--name</argument>
                    <argument>haiku</argument>
                    <!-- destination -->
                    <argument>--dest</argument>
                    <argument>${project.build.directory}/haiku-${os.arch}-installer</argument>
                    <!-- temp folder -->
                    <argument>--temp</argument>
                    <argument>${project.build.directory}/jpackage-${os.arch}-temp</argument>
                    <!-- verbose -->
                    <argument>--verbose</argument>
                    <!-- input -->
                    <argument>--input</argument>
                    <argument>${project.build.directory}/jpackage-${os.arch}</argument>
                    <!-- icon -->
                    <argument>--icon</argument>
                    <argument>${project.basedir}/src/main/resources/haiku.icns</argument>
                    <!-- main-jar (relative-path) -->
                    <argument>--main-jar</argument>
                    <argument>haiku.jar</argument>
                    <!-- about-url -->
                    <argument>--about-url</argument>
                    <argument>https://github.com/leogps/haiku</argument>
                    <!-- license-file -->
                    <argument>--license-file</argument>
                    <argument>${project.basedir}/../LICENSE</argument>
                    <!-- resource-dir -->
                    <argument>--resource-dir</argument>
                    <argument>${project.basedir}/macos</argument>
                    <!-- mac-package-name -->
                    <argument>--mac-package-name</argument>
                    <argument>Haiku</argument>
                    <!-- mac-package-identifier -->
                    <argument>--mac-package-identifier</argument>
                    <argument>org.gps.haiku</argument>
                    <!-- java-options: current-working-directory -->
                    <argument>--java-options</argument>
                    <argument>-Dhaiku.cwd.path=$APPDIR</argument>
                    <!-- java-options: log4j-config-file -->
                    <argument>--java-options</argument>
                    <argument>-Dhaiku.log4j.config.file=$APPDIR/log4j2.xml</argument>
                    <!-- java-options: mac-app-properties -->
                    <argument>--java-options</argument>
                    <argument>-Dhaiku.mac.properties.file=$APPDIR/config/mac-app.properties</argument>
                    <!-- java-options: enable-antialiasing -->
                    <argument>--java-options</argument>
                    <argument>-Dapple.awt.antialiasing=true</argument>
                    <!-- java-options: enable-opengl -->
                    <argument>--java-options</argument>
                    <argument>-Dsun.java2d.opengl=true</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>